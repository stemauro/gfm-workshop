# lightning.pytorch==2.1.1
seed_everything: 0
trainer:
  accelerator: auto
  strategy: auto
  devices: auto
  num_nodes: 1
  precision: 16-mixed
  logger: True # will use tensorboardlogger
  callbacks:
    - class_path: RichProgressBar
    - class_path: LearningRateMonitor
      init_args:
        logging_interval: epoch
    - class_path: EarlyStopping
      init_args:
        monitor: val/loss
        patience: 20

  max_epochs: 100
  check_val_every_n_epoch: 1
  log_every_n_steps: 50
  enable_checkpointing: true
  default_root_dir: output/MADOS

data:
  class_path: GenericNonGeoSegmentationDataModule
  init_args:
    batch_size: 16
    num_workers: 8
    constant_scale: 10000  # Scale 0-1 to 0-10000 (HLS data)
    dataset_bands:  # Dataset bands
      - COASTAL_AEROSOL
      - BLUE
      - GREEN
      - RED
      - RED_EDGE_1
      - RED_EDGE_2
      - RED_EDGE_3
      - NIR_BROAD
      - NIR_NARROW
      # - WATER_VAPOR  # B09 not included
      # - CIRRUS  # B10 not included
      - SWIR_1
      - SWIR_2
    output_bands: # Model input bands
      - BLUE
      - GREEN
      - RED
      - NIR_NARROW
      - SWIR_1
      - SWIR_2
    rgb_indices:
      - 2
      - 1
      - 0
    train_data_root: data/MADOS/train  # Labels can also be in a different folder, specified by <split>_label_data_root
    val_data_root: data/MADOS/val
    test_data_root: data/MADOS/test
    img_grep: "*_S2.tif"
    label_grep: "*_annotation.tif"
    no_label_replace: -1
    no_data_replace: 0
    means:
      - 775.229
      - 1080.992
      - 1228.585
      - 2497.202
      - 2204.213
      - 1610.832
    stds:
      - 1281.526
      - 1270.029
      - 1399.480
      - 1368.344
      - 1291.676
      - 1154.505
    num_classes: 16
    train_transform:
      - class_path: albumentations.RandomCrop
        init_args:
          height: 224
          width: 224
      - class_path: albumentations.HorizontalFlip
        init_args:
          p: 0.5
      - class_path: ToTensorV2
    val_transform:
      - class_path: albumentations.augmentations.geometric.resize.Resize
        init_args:
          height: 224
          width: 224
      - class_path: ToTensorV2
    test_transform:
      - class_path: albumentations.augmentations.geometric.resize.Resize
        init_args:
          height: 224
          width: 224
      - class_path: ToTensorV2

model:
  class_path: terratorch.tasks.SemanticSegmentationTask
  init_args:
    model_args:
      decoder: FCNDecoder
      pretrained: true
      backbone: prithvi_vit_100
      decoder_channels: 256
      in_channels: 6
      bands:
        - BLUE
        - GREEN
        - RED
        - NIR_NARROW
        - SWIR_1
        - SWIR_2
      num_frames: 1
      num_classes: 16
      head_dropout: 0.1
      decoder_num_convs: 4
      head_channel_list:
        - 256
    loss: ce
    aux_heads:
      - name: aux_head
        decoder: FCNDecoder
        decoder_args:
          decoder_channels: 256
          decoder_in_index: -1
          decoder_num_convs: 2
          head_dropout: 0.1
          # head_channel_list:
          #   - 64
    aux_loss:
      aux_head: 1.0
    ignore_index: -1
    # class_distr = [0.00336, 0.00241, 0.00336, 0.00142, 0.00775, 0.18452, 0.34775, 0.20638, 0.00062, 0.1169, 0.09188,
    # 0.01309, 0.00917, 0.00176, 0.00963]  # without 0 class "others" -> assuming 50% = 1
    class_weights:
      - 0.000230
      - 0.068459
      - 0.095445
      - 0.068459
      - 0.161988
      - 0.029680
      - 0.001247
      - 0.000661
      - 0.001115
      - 0.371005
      - 0.001968
      - 0.002504
      - 0.017572
      - 0.025084
      - 0.130695
      - 0.023886
    freeze_backbone: false
    freeze_decoder: false
    model_factory: PrithviModelFactory
    class_names:
      - Others
      - Marine Debris
      - Dense Sargassum
      - Sparse Floating Algae
      - Natural Organic Material
      - Ship
      - Oil Spill
      - Marine Water
      - Sediment-Laden Water
      - Foam
      - Turbid Water
      - Shallow Water
      - Waves & Wakes
      - Oil Platform
      - Jellyfish
      - Sea snot
optimizer:
  class_path: torch.optim.AdamW
  init_args:
    # lr: 1.e-4
    lr: 5.e-5
    weight_decay: 0.05
lr_scheduler:
  class_path: ReduceLROnPlateau
  init_args:
    monitor: val/loss
#  class_path: CosineAnnealingLR
#  init_args:
#    T_max: 50
